name: Container Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # We need a newer version of shellcheck to avoid problems with the
    # relative imports. Our scripts work on v0.7.2 and up but not the
    # v0.7.0 preinstalled in the ubutnu image
    - name: Update shellcheck
      run: |
        shellcheck_version="v0.8.0"
        url="https://github.com/koalaman/shellcheck/releases/download/${shellcheck_version}/shellcheck-${shellcheck_version}.linux.x86_64.tar.xz"
        curl -Lo /tmp/shellcheck.tar.xz "$url"
        mkdir /tmp/shellcheck
        tar -xf /tmp/shellcheck.tar.xz -C /tmp/shellcheck
        mkdir -p ~/bin
        install -m0755 /tmp/shellcheck/shellcheck-${shellcheck_version}/shellcheck  ~/bin/shellcheck
    - name: Show shellcheck version
      run: $HOME/bin/shellcheck --version
    - name: Run static check tools
      run: make check SHELLCHECK=$HOME/bin/shellcheck

  build-server:
    runs-on: ubuntu-latest
    env:
      BUILDAH_FORMAT: oci
    steps:
    - uses: actions/checkout@v2
    - name: Build the server image
      run: make build-server

  build-ad-server:
    runs-on: ubuntu-latest
    env:
      BUILDAH_FORMAT: oci
    steps:
    - uses: actions/checkout@v2
    - name: Build the ad server image
      run: make build-ad-server

  build-client:
    runs-on: ubuntu-latest
    env:
      BUILDAH_FORMAT: oci
    steps:
    - uses: actions/checkout@v2
    - name: Build the client image
      run: make build-client

  test-server:
    #needs: build-server
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test the server image
      run: make test-server

  test-ad-server-kubernetes:
    #runs-on: ubuntu-latest
    # need to explicitly use 20.04 to avoid problems with jq...
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: nolar/setup-k3d-k3s@v1
    - name: get nodes
      run: kubectl get nodes
    - name: build ad container
      run: make CONTAINER_CMD=docker build-ad-server
    - name: import ad server image
      run: k3d image import samba-ad-container:latest
    - name: build file server container
      run: make CONTAINER_CMD=docker build-server
    - name: import file server image
      run: k3d image import samba-container:latest
    - name: run the ad-dc deployment test
      run: ./tests/test-samba-ad-server-kubernetes.sh

  push:

    # verify it passes build and test first
    needs: test-server

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'samba-in-kubernetes/samba-container'

    steps:
      - uses: actions/checkout@v2
      - name: log in to quay.io
        run: podman login -u "${{ secrets.QUAY_USER }}" -p "${{ secrets.QUAY_PASS }}" quay.io
      - name: push server image
        # note: forcing use of podman here, since we did podman login above
        run: make CONTAINER_CMD=podman push-server
      - name: push ad-server image
        run: make CONTAINER_CMD=podman push-ad-server
      - name: push client image
        # note: forcing use of podman here, since we did podman login above
        run: make CONTAINER_CMD=podman push-client
